name: docs.djl.ai build

on:
  # Publish docs weekly
  schedule:
    - cron:  '0 9 * * 1'

  # To trigger this workflow manually, you can use the following curl command:
  # curl -XPOST -u "USERNAME:PERSONAL_TOKEN" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/awslabs/djl/dispatches --data '{"event_type": "docs"}'

  # Make sure you create your personal token with repo access. Follow steps in
  # https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line
  # to create your personal token.
  repository_dispatch:
    types: [docs]

documentation:
  runs-on: ubuntu-18.04
  steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Set up Python3
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: install Python Dependencies
      run: pip3 install mkdocs mkdocs-exclude mknotebooks mkdocs-material jupyter Pygments
    - name: Install IJava kernel
      run: |
        git clone https://github.com/frankfliu/IJava.git
        cd IJava/
        ./gradlew installKernel
    - name: clone DJL repo to access the DJL parent dir
      run: git clone https://github.com/awslabs/djl djl_tmp
    - name: run Notebooks
      run: |
        cd djl_tmp/jupyter
        rm -rf d2l-java
        bash test_notebook.sh
    - name: build docs
      run: |
        cd djl_tmp/docs
        mkdocs build --site-dir ../../site
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Copy files to S3 with the AWS CLI
      run: |
        aws s3 sync site s3://djl-ai/documentation/nightly --delete
        aws cloudfront create-invalidation --distribution-id E733IIDCG0G5U --paths /
