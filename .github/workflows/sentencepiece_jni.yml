name: sentencepiece jni release

on:
  # To trigger this workflow manually, you can use the following curl command:
  # curl -XPOST -u "USERNAME:PERSONAL_TOKEN" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/awslabs/djl/dispatches --data '{"event_type": "sentencepiece-jni-build"}'

  # Make sure you create your personal token with repo access. Follow steps in
  # https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line
  # to create your personal token.
  repository_dispatch:
    types: [sentencepiece-jni-build]

jobs:
  build-sentencepiece-jni-cpu:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [macos-latest, ubuntu-18.04]

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: install libgoogle-perftools-dev
        if: runner.os == 'Linux'
        run: sudo apt-get install libgoogle-perftools-dev
      - name: Release JNI prep
        run: ./gradlew :extensions:sentencepiece:compileJNI
      - name: Upload compiled jni library
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: jnilib-${{ runner.os }}
          path: extensions/sentencepiece/jnilib

  publish:
    runs-on: ubuntu-18.04
    needs: [build-sentencepiece-jni-cpu]
    steps:
      - uses: actions/checkout@v2
      - name: Download compiledJNI Mac
        uses: actions/download-artifact@v1
        with:
          name: jnilib-macOS
          path: jnilib
      - name: Download compiledJNI Linux CPU
        uses: actions/download-artifact@v1
        with:
          name: jnilib-Linux
          path: jnilib
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Copy files to S3 with the AWS CLI
        run: |
          aws s3 sync jnilib s3://djl-ai/publish/sentencepiece-0.1.92/jnilib
