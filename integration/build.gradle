plugins {
    id 'application'
    id 'jacoco'
}

repositories {
    maven {
        url 'https://joule.s3.amazonaws.com/repo'
    }
}

def classifier = getClassifier()

dependencies {
    compile "commons-cli:commons-cli:${commons_cli_version}"
    compile "org.slf4j:slf4j-simple:${slf4j_version}"
    compile project(":repository")
    compile project(":model-zoo")
    compile project(":mxnet:dataset")
    compile project(":mxnet:engine")

    runtime "org.apache.mxnet:mxnet-native-mkl:1.5.0-SNAPSHOT:${classifier}"

    testCompile "org.testng:testng:${testng_version}"
}

jar {
    manifest {
        attributes 'Main-Class': "software.amazon.ai.integration.tests.MxNDArrayOperatorsTest"
    }
    includeEmptyDirs = false
    from configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }

    exclude "META-INF/maven/**"
    exclude "META-INF/INDEX.LIST"
    exclude "META-INF/MANIFEST*"
    exclude "META-INF//LICENSE*"
    exclude "META-INF//NOTICE*"
}

task copyDependencies(type: Copy) {
    into "build/dependencies"
    from configurations.runtime
}

application {
    mainClassName = System.getProperty("main", "software.amazon.ai.integration.tests.MxNDArrayOperatorsTest")
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    group = "Reporting"
    sourceDirectories = files()
    classDirectories = files()

    javaProjects().findAll { p ->
        ![":mxnet:jnarator", ":tensorflow:engine"].contains(p.getPath())
    }.each { p ->
        additionalSourceDirs files((Set<File>) p.sourceSets.main.allJava.srcDirs)
        additionalClassDirs((FileCollection) p.sourceSets.main.output)
    }

    reports {
        xml.enabled true
        csv.enabled false
    }

    // Work-around to allow us to build list of executionData files in doFirst
    onlyIf = {
        true
    }
}

test.finalizedBy project.tasks.jacocoTestReport

check.dependsOn jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.1
            }
        }
    }
}
