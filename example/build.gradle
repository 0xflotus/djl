plugins {
    id 'application'
}

repositories {
    maven {
        url 'https://joule.s3.amazonaws.com/repo'
    }
}

String systemInfo = getClassifier()

def getClassifier() { 
    String osName = System.getProperty("os.name")
    String classiferName;
    if (osName.startsWith("Win")) { 
        classiferName = "win32" 
    } else if (osName.startsWith("Mac")) { 
        classiferName = "osx"
    } else if (osName.startsWith("Linux")) { 
        classifierName = "linux" 
    } else { 
        throw new GradleException("Unsupported os: " + osName)
    } 
    return classiferName + "-" + System.getProperty("os.arch") 
}

dependencies {
    compile "commons-cli:commons-cli:${commons_cli_version}"
    compile "org.slf4j:slf4j-simple:${slf4j_version}"
    compile "com.google.code.gson:gson:${gson_version}"
    runtime "org.apache.mxnet:mxnet-native-mkl:1.5.0-SNAPSHOT:${systemInfo}"
    runtime "org.apache.mxnet:joule:0.1.0"
    compile "software.amazon.ai:joule-api:0.1.0"
    testCompile "org.testng:testng:${testng_version}"
}

jar {
    manifest {
        attributes 'Main-Class': "software.amazon.ai.example.SsdExample"
    }
    includeEmptyDirs = false
    from configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }

    exclude "META-INF/maven/**"
    exclude "META-INF/INDEX.LIST"
    exclude "META-INF/MANIFEST*"
    exclude "META-INF//LICENSE*"
    exclude "META-INF//NOTICE*"
}

task copyDependencies(type: Copy) {
    into "build/dependencies"
    from configurations.runtime
}

application {
    mainClassName = System.getProperty("main", "software.amazon.ai.example.SsdExample")
}