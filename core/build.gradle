plugins {
    id 'java'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "commons-cli:commons-cli:${commons_cli_version}"
    compile "net.java.dev.jna:jna:${jna_version}"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_slf4j_version}"

    testCompile "org.testng:testng:${testng_version}"
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'build/generated-src']
        }
    }
}

checkstyleMain.source = 'src/main/java'
pmdMain.source = 'src/main/java'

jar {
    manifest {
        attributes 'Main-Class': 'org.apache.mxnet.ModuleApiTesting'
    }
    includeEmptyDirs = false
    from configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }

    exclude "META-INF/maven/**"
    exclude "META-INF/INDEX.LIST"
    exclude "META-INF/MANIFEST*"
    exclude "META-INF//LICENSE*"
    exclude "META-INF//NOTICE*"
}

task jnarator(dependsOn: ":jnarator:jar") {
    doLast {
        File jnaGenerator = project(":jnarator").jar.outputs.files.singleFile
        String mxnetHome = System.getProperty("MXNET_DIR")
        if (mxnetHome == null) {
            mxnetHome = System.getenv("MXNET_DIR")
            if (mxnetHome == null) {
                File rootDir = new File("${rootProject.projectDir}/../");
                File file = new File(rootDir, "include/mxnet/c_api.h");
                if (!file.exists()) {
                    file = new File(rootDir, "incubator-mxnet/include/mxnet/c_api.h");
                    if (!file.exists()) {
                        file = new File(rootDir, "mxnet/include/mxnet/c_api.h");
                        if (!file.exists()) {
                            throw new GradleException("Please specify MXNET_DIR explictly in environment vairable or System properties.")
                        }
                    }
                }
                mxnetHome = file.getParentFile().getParentFile().getParentFile().getAbsolutePath();
            }
        }

        javaexec {
            main = "-jar"
            args = [
                    jnaGenerator.absolutePath,
                    "-l",
                    "mxnet",
                    "-p",
                    "org.apache.mxnet.jna",
                    "-o",
                    "${project.buildDir}/generated-src",
                    "-m",
                    "${project.projectDir}/src/main/jna/mapping.properties",
                    "-f",
                    "${mxnetHome}/include/mxnet/c_api.h",
                    "${mxnetHome}/include/nnvm/c_api.h",
                    "${mxnetHome}/include/mxnet/c_predict_api.h"
            ]
        }
    }
}
compileJava.dependsOn(jnarator)
